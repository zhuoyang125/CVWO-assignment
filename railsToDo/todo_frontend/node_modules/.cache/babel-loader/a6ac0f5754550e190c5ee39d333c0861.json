{"ast":null,"code":"'use strict';\n\nvar path = require('../internals/path');\n\nvar aFunction = require('../internals/a-function');\n\nvar anObject = require('../internals/an-object');\n\nvar create = require('../internals/object-create');\n\nvar createNonEnumerableProperty = require('../internals/create-non-enumerable-property');\n\nvar redefineAll = require('../internals/redefine-all');\n\nvar wellKnownSymbol = require('../internals/well-known-symbol');\n\nvar InternalStateModule = require('../internals/internal-state');\n\nvar setInternalState = InternalStateModule.set;\nvar getInternalState = InternalStateModule.get;\nvar TO_STRING_TAG = wellKnownSymbol('toStringTag');\n\nvar $return = function $return(value) {\n  var iterator = getInternalState(this).iterator;\n  var $$return = iterator['return'];\n  return $$return === undefined ? {\n    done: true,\n    value: value\n  } : anObject($$return.call(iterator, value));\n};\n\nvar $throw = function $throw(value) {\n  var iterator = getInternalState(this).iterator;\n  var $$throw = iterator['throw'];\n  if ($$throw === undefined) throw value;\n  return $$throw.call(iterator, value);\n};\n\nmodule.exports = function (nextHandler, IS_ITERATOR) {\n  var IteratorProxy = function Iterator(state) {\n    state.next = aFunction(state.iterator.next);\n    state.done = false;\n    setInternalState(this, state);\n  };\n\n  IteratorProxy.prototype = redefineAll(create(path.Iterator.prototype), {\n    next: function next() {\n      var state = getInternalState(this);\n      var result = state.done ? undefined : nextHandler.apply(state, arguments);\n      return {\n        done: state.done,\n        value: result\n      };\n    },\n    'return': $return,\n    'throw': $throw\n  });\n\n  if (!IS_ITERATOR) {\n    createNonEnumerableProperty(IteratorProxy.prototype, TO_STRING_TAG, 'Generator');\n  }\n\n  return IteratorProxy;\n};","map":null,"metadata":{},"sourceType":"script"}