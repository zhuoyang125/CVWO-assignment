{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\zhuoy\\\\Documents\\\\basic-web-dev\\\\CVWO-assignment\\\\railsToDo\\\\todo_frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _objectSpread from \"C:\\\\Users\\\\zhuoy\\\\Documents\\\\basic-web-dev\\\\CVWO-assignment\\\\railsToDo\\\\todo_frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\zhuoy\\\\Documents\\\\basic-web-dev\\\\CVWO-assignment\\\\railsToDo\\\\todo_frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nvar _jsxFileName = \"C:\\\\Users\\\\zhuoy\\\\Documents\\\\basic-web-dev\\\\CVWO-assignment\\\\railsToDo\\\\todo_frontend\\\\src\\\\components\\\\Search.jsx\";\nimport React from \"react\";\n\nfunction Search(props) {\n  var createComplete = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(taskItem) {\n      var initial, completed_task, response;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              console.log(new Date(taskItem.due_date));\n              initial = taskItem.completed;\n              completed_task = _objectSpread(_objectSpread({}, taskItem), {}, {\n                completed: !initial\n              });\n              _context.next = 5;\n              return fetch(\"http://localhost:3000/todos/\" + taskItem.id, {\n                method: \"put\",\n                headers: {\n                  \"Content-Type\": \"application/json\"\n                },\n                body: JSON.stringify(completed_task)\n              });\n\n            case 5:\n              response = _context.sent;\n\n            case 6:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function createComplete(_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  var deleteTask = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(taskItem) {\n      var response;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return fetch(\"http://localhost:3000/todos/\" + taskItem.id, {\n                method: \"delete\"\n              });\n\n            case 2:\n              response = _context2.sent;\n\n            case 3:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function deleteTask(_x2) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  function listTask(taskItem) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      style: taskItem.completed ? {\n        textDecoration: \"line-through\"\n      } : {\n        textDecoration: \"none\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }\n    }, taskItem.todo_title), \" */}\", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"checkbox\",\n      onClick: function onClick() {\n        return createComplete(taskItem);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }\n    }, \"Complete\"), /*#__PURE__*/React.createElement(\"h5\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }\n    }, taskItem.due_date), /*#__PURE__*/React.createElement(\"h5\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }\n    }, taskItem.todo_tag), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }\n    }, taskItem.completed), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: function onClick() {\n        return deleteTask(taskItem);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }\n    }, \"Delete\"));\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }, props.searchResults.map(listTask));\n}\n\nexport default Search;","map":{"version":3,"sources":["C:/Users/zhuoy/Documents/basic-web-dev/CVWO-assignment/railsToDo/todo_frontend/src/components/Search.jsx"],"names":["React","Search","props","createComplete","taskItem","console","log","Date","due_date","initial","completed","completed_task","fetch","id","method","headers","body","JSON","stringify","response","deleteTask","listTask","textDecoration","todo_title","todo_tag","searchResults","map"],"mappings":";;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,SAASC,MAAT,CAAgBC,KAAhB,EAAsB;AAElB,MAAMC,cAAc;AAAA,wEAAG,iBAAMC,QAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AACnBC,cAAAA,OAAO,CAACC,GAAR,CAAY,IAAIC,IAAJ,CAASH,QAAQ,CAACI,QAAlB,CAAZ;AACMC,cAAAA,OAFa,GAEHL,QAAQ,CAACM,SAFN;AAGbC,cAAAA,cAHa,mCAIZP,QAJY;AAKfM,gBAAAA,SAAS,EAAE,CAACD;AALG;AAAA;AAAA,qBAOIG,KAAK,CAAC,iCAAiCR,QAAQ,CAACS,EAA3C,EAA+C;AACvEC,gBAAAA,MAAM,EAAE,KAD+D;AAEvEC,gBAAAA,OAAO,EAAE;AACL,kCAAgB;AADX,iBAF8D;AAKvEC,gBAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeP,cAAf;AALiE,eAA/C,CAPT;;AAAA;AAObQ,cAAAA,QAPa;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAAdhB,cAAc;AAAA;AAAA;AAAA,KAApB;;AAkBA,MAAMiB,UAAU;AAAA,yEAAG,kBAAMhB,QAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAEQQ,KAAK,CAAC,iCAAiCR,QAAQ,CAACS,EAA3C,EAA+C;AACvEC,gBAAAA,MAAM,EAAE;AAD+D,eAA/C,CAFb;;AAAA;AAETK,cAAAA,QAFS;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAAVC,UAAU;AAAA;AAAA;AAAA,KAAhB;;AAUA,WAASC,QAAT,CAAkBjB,QAAlB,EAA2B;AACvB,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAI,MAAA,KAAK,EAAGA,QAAQ,CAACM,SAAT,GAAqB;AAACY,QAAAA,cAAc,EAAE;AAAjB,OAArB,GAAwD;AAACA,QAAAA,cAAc,EAAE;AAAjB,OAApE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA+FlB,QAAQ,CAACmB,UAAxG,CADJ,uBAEI;AAAO,MAAA,IAAI,EAAC,UAAZ;AAAuB,MAAA,OAAO,EAAE;AAAA,eAAMpB,cAAc,CAACC,QAAD,CAApB;AAAA,OAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKA,QAAQ,CAACI,QAAd,CAJJ,eAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKJ,QAAQ,CAACoB,QAAd,CALJ,eAMI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAIpB,QAAQ,CAACM,SAAb,CANJ,eAOI;AAAQ,MAAA,OAAO,EAAE;AAAA,eAAMU,UAAU,CAAChB,QAAD,CAAhB;AAAA,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAPJ,CADJ;AAYH;;AAED,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKF,KAAK,CAACuB,aAAN,CAAoBC,GAApB,CAAwBL,QAAxB,CADL,CADJ;AAKH;;AAED,eAAepB,MAAf","sourcesContent":["import React from \"react\";\r\n\r\nfunction Search(props){\r\n\r\n    const createComplete = async taskItem => {\r\n        console.log(new Date(taskItem.due_date));\r\n        const initial = taskItem.completed;\r\n        const completed_task = {\r\n            ...taskItem,\r\n            completed: !initial\r\n        }\r\n        const response = await fetch(\"http://localhost:3000/todos/\" + taskItem.id, {\r\n            method: \"put\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n            },\r\n            body: JSON.stringify(completed_task),\r\n        });\r\n\r\n        // await getTasks();\r\n    }\r\n\r\n    const deleteTask = async taskItem => {\r\n        \r\n        const response = await fetch(\"http://localhost:3000/todos/\" + taskItem.id, {\r\n            method: \"delete\",\r\n        })\r\n\r\n        // await getTasks();\r\n\r\n    }\r\n\r\n    function listTask(taskItem){\r\n        return (\r\n            <div>\r\n                <h3 style={ taskItem.completed ? {textDecoration: \"line-through\"} : {textDecoration: \"none\"}}>{taskItem.todo_title}</h3> */}\r\n                <input type=\"checkbox\" onClick={() => createComplete(taskItem)} />\r\n                <p>Complete</p>\r\n                <h5>{taskItem.due_date}</h5>\r\n                <h5>{taskItem.todo_tag}</h5>\r\n                <p>{taskItem.completed}</p>\r\n                <button onClick={() => deleteTask(taskItem)}>Delete</button>\r\n                {/* <button onClick={() => selectUpdate(taskItem)}>Update</button> */}\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {props.searchResults.map(listTask)}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Search;"]},"metadata":{},"sourceType":"module"}