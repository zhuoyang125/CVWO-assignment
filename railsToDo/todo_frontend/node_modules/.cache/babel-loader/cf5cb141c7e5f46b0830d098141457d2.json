{"ast":null,"code":"// https://github.com/tc39/proposal-iterator-helpers\nvar $ = require('../internals/export');\n\nvar path = require('../internals/path');\n\nvar aFunction = require('../internals/a-function');\n\nvar anObject = require('../internals/an-object');\n\nvar toObject = require('../internals/to-object');\n\nvar createAsyncIteratorProxy = require('../internals/async-iterator-create-proxy');\n\nvar getAsyncIteratorMethod = require('../internals/get-async-iterator-method');\n\nvar AsyncIterator = path.AsyncIterator;\nvar AsyncIteratorProxy = createAsyncIteratorProxy(function (arg) {\n  return anObject(this.next.call(this.iterator, arg));\n}, true);\n$({\n  target: 'AsyncIterator',\n  stat: true\n}, {\n  from: function from(O) {\n    var object = toObject(O);\n    var usingIterator = getAsyncIteratorMethod(object);\n    var iterator;\n\n    if (usingIterator != null) {\n      iterator = aFunction(usingIterator).call(object);\n      if (iterator instanceof AsyncIterator) return iterator;\n    } else {\n      iterator = object;\n    }\n\n    return new AsyncIteratorProxy({\n      iterator: iterator\n    });\n  }\n});","map":null,"metadata":{},"sourceType":"script"}