{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\zhuoy\\\\Documents\\\\basic-web-dev\\\\CVWO-assignment\\\\railsToDo\\\\todo_frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\zhuoy\\\\Documents\\\\basic-web-dev\\\\CVWO-assignment\\\\railsToDo\\\\todo_frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"C:\\\\Users\\\\zhuoy\\\\Documents\\\\basic-web-dev\\\\CVWO-assignment\\\\railsToDo\\\\todo_frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\zhuoy\\\\Documents\\\\basic-web-dev\\\\CVWO-assignment\\\\railsToDo\\\\todo_frontend\\\\src\\\\components\\\\List.jsx\";\nimport React, { useEffect, useState } from 'react';\nimport Update from \"./Update\";\n\nfunction List() {\n  // Data for updating\n  var update_mode = true;\n\n  var _useState = useState({\n    todo_title: \"\",\n    due_date: \"\",\n    todo_tag: \"\",\n    completed: false\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      taskToUpdate = _useState2[0],\n      setTaskToUpdate = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      listOfTasks = _useState4[0],\n      setListOfTasks = _useState4[1];\n\n  var getTasks = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var response, data;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return fetch(\"http://localhost:3000/todos\");\n\n            case 2:\n              response = _context.sent;\n              _context.next = 5;\n              return response.json();\n\n            case 5:\n              data = _context.sent;\n              setListOfTasks(data);\n\n            case 7:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function getTasks() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  function handleUpdate(taskItem) {\n    setTaskToUpdate(taskItem);\n    update_mode = true;\n  }\n\n  function listTask(taskItem) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }\n    }, taskItem.todo_title), /*#__PURE__*/React.createElement(\"h5\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }\n    }, taskItem.due_date), /*#__PURE__*/React.createElement(\"h5\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }\n    }, taskItem.todo_tag), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }\n    }, taskItem.completed), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: function onClick() {\n        return deleteTask(taskItem);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }\n    }, \"Delete\"), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: function onClick() {\n        return handleUpdate(taskItem);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }\n    }, \"Update\"));\n  }\n\n  var deleteTask = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(taskItem) {\n      var response;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              console.log(taskItem);\n              _context2.next = 3;\n              return fetch(\"http://localhost:3000/todos/\" + taskItem.id, {\n                method: \"delete\"\n              });\n\n            case 3:\n              response = _context2.sent;\n              _context2.next = 6;\n              return getTasks();\n\n            case 6:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function deleteTask(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  useEffect(function () {\n    getTasks();\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }\n  }, \"List of Tasks\"), listOfTasks.map(listTask), /*#__PURE__*/React.createElement(Update, {\n    taskToUpdate: taskToUpdate,\n    getTasks: getTasks,\n    update_mode: update_mode,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }\n  }));\n}\n\nexport default List;","map":{"version":3,"sources":["C:/Users/zhuoy/Documents/basic-web-dev/CVWO-assignment/railsToDo/todo_frontend/src/components/List.jsx"],"names":["React","useEffect","useState","Update","List","update_mode","todo_title","due_date","todo_tag","completed","taskToUpdate","setTaskToUpdate","listOfTasks","setListOfTasks","getTasks","fetch","response","json","data","handleUpdate","taskItem","listTask","deleteTask","console","log","id","method","map"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport Update from \"./Update\";\r\n\r\nfunction List(){\r\n    // Data for updating\r\n    let update_mode = true;\r\n\r\n    const [taskToUpdate, setTaskToUpdate] = useState({\r\n        todo_title:\"\",\r\n        due_date:\"\",\r\n        todo_tag:\"\",\r\n        completed:false\r\n    });\r\n\r\n    const [listOfTasks, setListOfTasks] = useState([]);\r\n\r\n    const getTasks = async () => {\r\n        const response = await fetch(\"http://localhost:3000/todos\");\r\n        const data = await response.json();\r\n        setListOfTasks(data);\r\n    }\r\n\r\n    function handleUpdate(taskItem) {\r\n        setTaskToUpdate(taskItem);\r\n        update_mode = true;\r\n    }\r\n\r\n    function listTask(taskItem){\r\n        return (\r\n            <div>\r\n                <h3>{taskItem.todo_title}</h3>\r\n                <h5>{taskItem.due_date}</h5>\r\n                <h5>{taskItem.todo_tag}</h5>\r\n                <p>{taskItem.completed}</p>\r\n                <button onClick={() => deleteTask(taskItem)}>Delete</button>\r\n                <button onClick={() => handleUpdate(taskItem)}>Update</button>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    const deleteTask = async taskItem => {\r\n        console.log(taskItem);\r\n        const response = await fetch(\"http://localhost:3000/todos/\" + taskItem.id, {\r\n            method: \"delete\",\r\n        })\r\n\r\n        await getTasks();\r\n\r\n    }\r\n\r\n    useEffect(() => {getTasks()}, []);\r\n\r\n    return(\r\n        <div>\r\n            <h1>List of Tasks</h1>\r\n            {listOfTasks.map(listTask)}\r\n            <Update taskToUpdate={taskToUpdate} getTasks={getTasks} update_mode={update_mode} />\r\n        </div>\r\n        \r\n    )\r\n}\r\n\r\nexport default List;"]},"metadata":{},"sourceType":"module"}