{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\zhuoy\\\\Documents\\\\basic-web-dev\\\\CVWO-assignment\\\\railsToDo\\\\todo_frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\zhuoy\\\\Documents\\\\basic-web-dev\\\\CVWO-assignment\\\\railsToDo\\\\todo_frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"C:\\\\Users\\\\zhuoy\\\\Documents\\\\basic-web-dev\\\\CVWO-assignment\\\\railsToDo\\\\todo_frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\zhuoy\\\\Documents\\\\basic-web-dev\\\\CVWO-assignment\\\\railsToDo\\\\todo_frontend\\\\src\\\\components\\\\List.jsx\";\nimport React, { useEffect, useState } from 'react';\nimport Update from \"./Update\";\n\nfunction List() {\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      updateMode = _useState2[0],\n      setUpdateMode = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      filterMode = _useState4[0],\n      setFilterMode = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      searchMode = _useState6[0],\n      setSearchMode = _useState6[1];\n\n  var _useState7 = useState(\"\"),\n      _useState8 = _slicedToArray(_useState7, 2),\n      query = _useState8[0],\n      setQuery = _useState8[1];\n\n  var _useState9 = useState({\n    todo_title: \"\",\n    due_date: \"\",\n    todo_tag: \"\"\n  }),\n      _useState10 = _slicedToArray(_useState9, 2),\n      taskToUpdate = _useState10[0],\n      setTaskToUpdate = _useState10[1];\n\n  var _useState11 = useState([]),\n      _useState12 = _slicedToArray(_useState11, 2),\n      listOfTasks = _useState12[0],\n      setListOfTasks = _useState12[1];\n\n  var _useState13 = useState([]),\n      _useState14 = _slicedToArray(_useState13, 2),\n      listOfFilteredTasks = _useState14[0],\n      setListOfFilteredTasks = _useState14[1];\n\n  function reset() {\n    setUpdateMode(false);\n    setFilterMode(false);\n    setSearchMode(false);\n  }\n\n  function filterTasks(event) {\n    setFilterMode(true);\n\n    if (event.target.value === \"\") {\n      setListOfFilteredTasks(listOfTasks);\n    } else {\n      var filtered = listOfTasks.filter(function (item) {\n        return item.todo_tag.toUpperCase() === event.target.value.toUpperCase();\n      });\n      setListOfFilteredTasks(filtered);\n    }\n  }\n\n  function handleSearchChange(event) {\n    setQuery(event.target.value);\n  }\n\n  function searchTask(event) {\n    event.preventDefault();\n    setSearchMode(true);\n    setQuery(\"\");\n\n    if (query === \"\") {\n      setListOfFilteredTasks(listOfTasks);\n    } else {\n      var filtered = listOfTasks.filter(function (item) {\n        return item.todo_title.includes(query);\n      });\n      setListOfFilteredTasks(filtered);\n    }\n  }\n\n  var getTasks = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var response, data;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return fetch(\"http://localhost:3000/todos\");\n\n            case 2:\n              response = _context.sent;\n              _context.next = 5;\n              return response.json();\n\n            case 5:\n              data = _context.sent;\n              setListOfTasks(data);\n\n            case 7:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function getTasks() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  function selectUpdate(taskItem) {\n    setTaskToUpdate(taskItem);\n    setUpdateMode(true);\n  }\n\n  function listTask(taskItem) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }\n    }, taskItem.todo_title), /*#__PURE__*/React.createElement(\"h5\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }\n    }, taskItem.due_date), /*#__PURE__*/React.createElement(\"h5\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }\n    }, taskItem.todo_tag), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: function onClick() {\n        return deleteTask(taskItem);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }\n    }, \"Delete\"), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: function onClick() {\n        return selectUpdate(taskItem);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }\n    }, \"Update\"), searchMode ? /*#__PURE__*/React.createElement(\"button\", {\n      onClick: function onClick() {\n        return reset();\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 31\n      }\n    }, \"Back\") : null);\n  }\n\n  function sortDate(listOfTasks) {\n    listOfTasks.sort(function (a, b) {\n      if (new Date(a.due_date) < new Date(b.due_date)) {\n        return -1;\n      } else {\n        return 1;\n      }\n    });\n    return listOfTasks;\n  }\n\n  var deleteTask = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(taskItem) {\n      var response;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return fetch(\"http://localhost:3000/todos/\" + taskItem.id, {\n                method: \"delete\"\n              });\n\n            case 2:\n              response = _context2.sent;\n              reset();\n              _context2.next = 6;\n              return getTasks();\n\n            case 6:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function deleteTask(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  useEffect(function () {\n    getTasks();\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    class: \"d-flex\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    onChange: handleSearchChange,\n    class: \"form-control me-2\",\n    type: \"search\",\n    placeholder: \"Search\",\n    \"aria-label\": \"Search\",\n    value: query,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: searchTask,\n    class: \"btn btn-outline-success\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 17\n    }\n  }, \"Search\")), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 17\n    }\n  }, \"List of Tasks\"), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 39\n    }\n  }), /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 17\n    }\n  }, \"Filter By:\"), /*#__PURE__*/React.createElement(\"select\", {\n    onChange: filterTasks,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 21\n    }\n  }, \"All\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"school\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 21\n    }\n  }, \"School\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"work\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 21\n    }\n  }, \"Work\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"personal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 21\n    }\n  }, \"Personal\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"urgent\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 21\n    }\n  }, \"Urgent\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"important\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 21\n    }\n  }, \"Important\"))), searchMode ? listOfFilteredTasks.length === 0 ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 58\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 62\n    }\n  }, \"No Tasks Found.\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: function onClick() {\n      return reset();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 62\n    }\n  }, \"Back\")) : sortDate(listOfFilteredTasks).map(listTask) : null, filterMode ? sortDate(listOfFilteredTasks).map(listTask) : sortDate(listOfTasks).map(listTask), /*#__PURE__*/React.createElement(Update, {\n    taskItem: taskToUpdate,\n    getTasks: getTasks,\n    update_mode: updateMode,\n    setUpdateMode: setUpdateMode,\n    setTaskToUpdate: setTaskToUpdate,\n    reset: reset,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 13\n    }\n  }));\n}\n\nexport default List;","map":{"version":3,"sources":["C:/Users/zhuoy/Documents/basic-web-dev/CVWO-assignment/railsToDo/todo_frontend/src/components/List.jsx"],"names":["React","useEffect","useState","Update","List","updateMode","setUpdateMode","filterMode","setFilterMode","searchMode","setSearchMode","query","setQuery","todo_title","due_date","todo_tag","taskToUpdate","setTaskToUpdate","listOfTasks","setListOfTasks","listOfFilteredTasks","setListOfFilteredTasks","reset","filterTasks","event","target","value","filtered","filter","item","toUpperCase","handleSearchChange","searchTask","preventDefault","includes","getTasks","fetch","response","json","data","selectUpdate","taskItem","listTask","deleteTask","sortDate","sort","a","b","Date","id","method","length","map"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport Update from \"./Update\";\r\n\r\nfunction List(){\r\n\r\n    const [updateMode, setUpdateMode] = useState(false);   \r\n    \r\n    const [filterMode, setFilterMode] = useState(false);\r\n\r\n    const [searchMode, setSearchMode] = useState(false);\r\n\r\n    const [query, setQuery] = useState(\"\");\r\n\r\n    const [taskToUpdate, setTaskToUpdate] = useState({\r\n        todo_title:\"\",\r\n        due_date:\"\",\r\n        todo_tag:\"\",\r\n    });\r\n\r\n    const [listOfTasks, setListOfTasks] = useState([]);\r\n\r\n    const [listOfFilteredTasks, setListOfFilteredTasks] = useState([]);\r\n\r\n    function reset(){\r\n        setUpdateMode(false);\r\n        setFilterMode(false);\r\n        setSearchMode(false);\r\n    }\r\n    \r\n\r\n    function filterTasks(event){\r\n        setFilterMode(true);\r\n        if (event.target.value === \"\") {\r\n            setListOfFilteredTasks(listOfTasks);\r\n        } else {\r\n            const filtered = listOfTasks.filter(item => {\r\n                return item.todo_tag.toUpperCase() === event.target.value.toUpperCase();\r\n            });\r\n            setListOfFilteredTasks(filtered);\r\n        }\r\n    }\r\n\r\n    function handleSearchChange(event){\r\n        setQuery(event.target.value);\r\n    }\r\n\r\n    function searchTask(event){\r\n        event.preventDefault();\r\n        setSearchMode(true);\r\n        setQuery(\"\");\r\n        if (query === \"\"){\r\n            setListOfFilteredTasks(listOfTasks);\r\n        } else {\r\n            const filtered = listOfTasks.filter(item => {\r\n                return item.todo_title.includes(query);\r\n            });\r\n            setListOfFilteredTasks(filtered);\r\n        }\r\n    }\r\n\r\n    const getTasks = async () => {\r\n        const response = await fetch(\"http://localhost:3000/todos\");\r\n        const data = await response.json();\r\n        setListOfTasks(data);\r\n    }\r\n\r\n    function selectUpdate(taskItem) {\r\n        setTaskToUpdate(taskItem);\r\n        setUpdateMode(true);\r\n    }\r\n\r\n\r\n    function listTask(taskItem){\r\n        return (\r\n            <div>\r\n                <h3>{taskItem.todo_title}</h3>\r\n                <h5>{taskItem.due_date}</h5>\r\n                <h5>{taskItem.todo_tag}</h5>\r\n                <button onClick={() => deleteTask(taskItem)}>Delete</button>\r\n                <button onClick={() => selectUpdate(taskItem)}>Update</button>\r\n                {searchMode ? <button onClick={() => reset() }>Back</button> : null}\r\n            </div>\r\n        )\r\n    }\r\n\r\n    function sortDate(listOfTasks){\r\n        listOfTasks.sort((a, b) => {\r\n            if (new Date(a.due_date) < new Date(b.due_date)){\r\n                return -1;\r\n            } else {\r\n                return 1;\r\n            }\r\n        });\r\n        return listOfTasks;\r\n    }\r\n\r\n    const deleteTask = async taskItem => {\r\n        \r\n        const response = await fetch(\"http://localhost:3000/todos/\" + taskItem.id, {\r\n            method: \"delete\",\r\n        })\r\n        reset();\r\n        await getTasks();\r\n\r\n    }\r\n\r\n    useEffect(() => {getTasks()}, []);\r\n\r\n\r\n    return(\r\n        <div>\r\n            <form class=\"d-flex\">\r\n                <input onChange={handleSearchChange} class=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\" value={query} />\r\n                <button onClick={searchTask} class=\"btn btn-outline-success\" >Search</button>\r\n            </form>\r\n            <div>\r\n                <h1>List of Tasks</h1><br/>\r\n                <h3>Filter By:</h3>\r\n                <select onChange={filterTasks}>\r\n                    <option value=\"\">All</option>\r\n                    <option value=\"school\">School</option>\r\n                    <option value=\"work\">Work</option>\r\n                    <option value=\"personal\">Personal</option>\r\n                    <option value=\"urgent\">Urgent</option>\r\n                    <option value=\"important\">Important</option>\r\n                </select>\r\n            </div>\r\n            {searchMode ? \r\n                        listOfFilteredTasks.length === 0 ?\r\n                                                         <div>\r\n                                                             <h1>No Tasks Found.</h1>\r\n                                                             <button onClick={() => reset() }>Back</button>\r\n                                                         </div> : \r\n                                                         sortDate(listOfFilteredTasks).map(listTask) :\r\n                                                         null}\r\n            {filterMode ? sortDate(listOfFilteredTasks).map(listTask) : sortDate(listOfTasks).map(listTask) }\r\n\r\n            <Update taskItem={taskToUpdate}\r\n                    getTasks={getTasks} \r\n                    update_mode={updateMode}\r\n                    setUpdateMode={setUpdateMode}\r\n                    setTaskToUpdate={setTaskToUpdate}\r\n                    reset={reset}  />\r\n        </div>\r\n        \r\n    )\r\n}\r\n\r\nexport default List;"]},"metadata":{},"sourceType":"module"}