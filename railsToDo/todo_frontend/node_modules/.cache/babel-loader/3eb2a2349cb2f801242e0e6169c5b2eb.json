{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\zhuoy\\\\Documents\\\\basic-web-dev\\\\CVWO-assignment\\\\railsToDo\\\\todo_frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\zhuoy\\\\Documents\\\\basic-web-dev\\\\CVWO-assignment\\\\railsToDo\\\\todo_frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"C:\\\\Users\\\\zhuoy\\\\Documents\\\\basic-web-dev\\\\CVWO-assignment\\\\railsToDo\\\\todo_frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\zhuoy\\\\Documents\\\\basic-web-dev\\\\CVWO-assignment\\\\railsToDo\\\\todo_frontend\\\\src\\\\components\\\\List.jsx\";\nimport React, { useEffect, useState } from 'react';\nimport Update from \"./Update\";\n\nfunction List(props) {\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      updateMode = _useState2[0],\n      setUpdateMode = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      filterMode = _useState4[0],\n      setFilterMode = _useState4[1];\n\n  var _useState5 = useState({\n    todo_title: \"\",\n    due_date: \"\",\n    todo_tag: \"\"\n  }),\n      _useState6 = _slicedToArray(_useState5, 2),\n      taskToUpdate = _useState6[0],\n      setTaskToUpdate = _useState6[1];\n\n  var _useState7 = useState([]),\n      _useState8 = _slicedToArray(_useState7, 2),\n      listOfTasks = _useState8[0],\n      setListOfTasks = _useState8[1];\n\n  var _useState9 = useState([]),\n      _useState10 = _slicedToArray(_useState9, 2),\n      listOfFilteredTasks = _useState10[0],\n      setListOfFilteredTasks = _useState10[1];\n\n  function reset() {\n    setUpdateMode(false);\n    setFilterMode(false);\n    props.setSearchMode(false);\n  }\n\n  function filterTasks(event) {\n    setFilterMode(true);\n\n    if (event.target.value === \"\") {\n      setListOfFilteredTasks(listOfTasks);\n    } else {\n      var filtered = listOfTasks.filter(function (item) {\n        return item.todo_tag.toUpperCase() === event.target.value.toUpperCase();\n      });\n      setListOfFilteredTasks(filtered);\n    }\n  }\n\n  var getTasks = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var response, data;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return fetch(\"http://localhost:3000/todos\");\n\n            case 2:\n              response = _context.sent;\n              _context.next = 5;\n              return response.json();\n\n            case 5:\n              data = _context.sent;\n              setListOfTasks(data);\n\n            case 7:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function getTasks() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  function selectUpdate(taskItem) {\n    setTaskToUpdate(taskItem);\n    setUpdateMode(true);\n  }\n\n  function listTask(taskItem) {\n    var current_date = new Date();\n    var late = new Date(taskItem.due_date) < current_date;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      class: \"container-sm\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      style: {\n        color: late ? \"red\" : \"black\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }\n    }, taskItem.todo_title), /*#__PURE__*/React.createElement(\"h5\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }\n    }, taskItem.due_date), /*#__PURE__*/React.createElement(\"h5\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }\n    }, taskItem.todo_tag), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: function onClick() {\n        return deleteTask(taskItem);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }\n    }, \"Delete\"), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: function onClick() {\n        return selectUpdate(taskItem);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }\n    }, \"Update\"), props.searchMode ? /*#__PURE__*/React.createElement(\"button\", {\n      onClick: function onClick() {\n        return reset();\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 37\n      }\n    }, \"Back\") : null);\n  }\n\n  function sortDate(listOfTasks) {\n    listOfTasks.sort(function (a, b) {\n      if (new Date(a.due_date) < new Date(b.due_date)) {\n        return -1;\n      } else {\n        return 1;\n      }\n    });\n    return listOfTasks;\n  }\n\n  var deleteTask = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(taskItem) {\n      var response;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return fetch(\"http://localhost:3000/todos/\" + taskItem.id, {\n                method: \"delete\"\n              });\n\n            case 2:\n              response = _context2.sent;\n              reset();\n              _context2.next = 6;\n              return getTasks();\n\n            case 6:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function deleteTask(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  useEffect(function () {\n    getTasks();\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }\n  }, props.searchMode && props.searchResults.length === 0 ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 21\n    }\n  }, \"No Tasks Found.\"), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: function onClick() {\n      return reset();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 21\n    }\n  }, \"Back\")) : props.searchMode ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 21\n    }\n  })) : /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 21\n    }\n  }, \"Filter By:\"), /*#__PURE__*/React.createElement(\"select\", {\n    onChange: filterTasks,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 25\n    }\n  }, \"All\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"school\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 25\n    }\n  }, \"School\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"work\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 25\n    }\n  }, \"Work\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"personal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 25\n    }\n  }, \"Personal\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"urgent\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 25\n    }\n  }, \"Urgent\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"important\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 25\n    }\n  }, \"Important\"))), props.searchMode ? sortDate(props.searchResults).map(listTask) : filterMode ? sortDate(listOfFilteredTasks).map(listTask) : sortDate(listOfTasks).map(listTask), /*#__PURE__*/React.createElement(Update, {\n    taskItem: taskToUpdate,\n    getTasks: getTasks,\n    update_mode: updateMode,\n    setUpdateMode: setUpdateMode,\n    setTaskToUpdate: setTaskToUpdate,\n    reset: reset,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 13\n    }\n  }));\n}\n\nexport default List;","map":{"version":3,"sources":["C:/Users/zhuoy/Documents/basic-web-dev/CVWO-assignment/railsToDo/todo_frontend/src/components/List.jsx"],"names":["React","useEffect","useState","Update","List","props","updateMode","setUpdateMode","filterMode","setFilterMode","todo_title","due_date","todo_tag","taskToUpdate","setTaskToUpdate","listOfTasks","setListOfTasks","listOfFilteredTasks","setListOfFilteredTasks","reset","setSearchMode","filterTasks","event","target","value","filtered","filter","item","toUpperCase","getTasks","fetch","response","json","data","selectUpdate","taskItem","listTask","current_date","Date","late","color","deleteTask","searchMode","sortDate","sort","a","b","id","method","searchResults","length","map"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport Update from \"./Update\";\r\n\r\nfunction List(props){\r\n\r\n    const [updateMode, setUpdateMode] = useState(false);   \r\n    \r\n    const [filterMode, setFilterMode] = useState(false);\r\n\r\n    const [taskToUpdate, setTaskToUpdate] = useState({\r\n        todo_title:\"\",\r\n        due_date:\"\",\r\n        todo_tag:\"\",\r\n    });\r\n\r\n    const [listOfTasks, setListOfTasks] = useState([]);\r\n\r\n    const [listOfFilteredTasks, setListOfFilteredTasks] = useState([]);\r\n\r\n    function reset(){\r\n        setUpdateMode(false);\r\n        setFilterMode(false);\r\n        props.setSearchMode(false);\r\n    }\r\n    \r\n\r\n    function filterTasks(event){\r\n        setFilterMode(true);\r\n        if (event.target.value === \"\") {\r\n            setListOfFilteredTasks(listOfTasks);\r\n        } else {\r\n            const filtered = listOfTasks.filter(item => {\r\n                return item.todo_tag.toUpperCase() === event.target.value.toUpperCase();\r\n            });\r\n            setListOfFilteredTasks(filtered);\r\n        }\r\n    }\r\n\r\n    const getTasks = async () => {\r\n        const response = await fetch(\"http://localhost:3000/todos\");\r\n        const data = await response.json();\r\n        setListOfTasks(data);\r\n    }\r\n\r\n    function selectUpdate(taskItem) {\r\n        setTaskToUpdate(taskItem);\r\n        setUpdateMode(true);\r\n    }\r\n\r\n\r\n    function listTask(taskItem){\r\n        const current_date = new Date();\r\n        let late = new Date(taskItem.due_date) < current_date;\r\n\r\n        return (\r\n            <div class=\"container-sm\">\r\n                <h3 style={{color: late ? \"red\" : \"black\"}}>{taskItem.todo_title}</h3>\r\n                <h5>{taskItem.due_date}</h5>\r\n                <h5>{taskItem.todo_tag}</h5>\r\n                <button onClick={() => deleteTask(taskItem)}>Delete</button>\r\n                <button onClick={() => selectUpdate(taskItem)}>Update</button>\r\n                {props.searchMode ? <button onClick={() => reset() }>Back</button> : null}\r\n            </div>\r\n        )\r\n    }\r\n\r\n    function sortDate(listOfTasks){\r\n        listOfTasks.sort((a, b) => {\r\n            if (new Date(a.due_date) < new Date(b.due_date)){\r\n                return -1;\r\n            } else {\r\n                return 1;\r\n            }\r\n        });\r\n        return listOfTasks;\r\n    }\r\n\r\n    const deleteTask = async taskItem => {\r\n        \r\n        const response = await fetch(\"http://localhost:3000/todos/\" + taskItem.id, {\r\n            method: \"delete\",\r\n        })\r\n        reset();\r\n        await getTasks();\r\n\r\n    }\r\n\r\n   \r\n\r\n    useEffect(() => {getTasks()}, []);\r\n\r\n\r\n    return(\r\n        <div>\r\n            {props.searchMode && props.searchResults.length === 0 ? \r\n                <div>\r\n                    <h1>No Tasks Found.</h1>\r\n                    <br/>\r\n                    <br/>\r\n                    <button onClick={() => reset() }>Back</button>\r\n                </div> : props.searchMode ? \r\n                <div>\r\n                    <br/>\r\n                </div> : \r\n                <div>\r\n                    <br/>\r\n                    <h3>Filter By:</h3>\r\n                    <select onChange={filterTasks}>\r\n                        <option value=\"\">All</option>\r\n                        <option value=\"school\">School</option>\r\n                        <option value=\"work\">Work</option>\r\n                        <option value=\"personal\">Personal</option>\r\n                        <option value=\"urgent\">Urgent</option>\r\n                        <option value=\"important\">Important</option>\r\n                    </select>\r\n                </div> \r\n            }\r\n\r\n            {props.searchMode ? sortDate(props.searchResults).map(listTask) \r\n                                : filterMode ? sortDate(listOfFilteredTasks).map(listTask) \r\n                                        : sortDate(listOfTasks).map(listTask)}\r\n\r\n            <Update taskItem={taskToUpdate}\r\n                    getTasks={getTasks} \r\n                    update_mode={updateMode}\r\n                    setUpdateMode={setUpdateMode}\r\n                    setTaskToUpdate={setTaskToUpdate}\r\n                    reset={reset}  />\r\n        </div>\r\n        \r\n    )\r\n}\r\n\r\nexport default List;"]},"metadata":{},"sourceType":"module"}