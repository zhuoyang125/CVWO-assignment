{"ast":null,"code":"'use strict'; // https://github.com/tc39/proposal-iterator-helpers\n\nvar $ = require('../internals/export');\n\nvar global = require('../internals/global');\n\nvar anInstance = require('../internals/an-instance');\n\nvar createNonEnumerableProperty = require('../internals/create-non-enumerable-property');\n\nvar fails = require('../internals/fails');\n\nvar has = require('../internals/has');\n\nvar wellKnownSymbol = require('../internals/well-known-symbol');\n\nvar IteratorPrototype = require('../internals/iterators-core').IteratorPrototype;\n\nvar IS_PURE = require('../internals/is-pure');\n\nvar ITERATOR = wellKnownSymbol('iterator');\nvar TO_STRING_TAG = wellKnownSymbol('toStringTag');\nvar NativeIterator = global.Iterator; // FF56- have non-standard global helper `Iterator`\n\nvar FORCED = IS_PURE || typeof NativeIterator != 'function' || NativeIterator.prototype !== IteratorPrototype // FF44- non-standard `Iterator` passes previous tests\n|| !fails(function () {\n  NativeIterator({});\n});\n\nvar IteratorConstructor = function Iterator() {\n  anInstance(this, IteratorConstructor);\n};\n\nif (IS_PURE) {\n  IteratorPrototype = {};\n  createNonEnumerableProperty(IteratorPrototype, ITERATOR, function () {\n    return this;\n  });\n}\n\nif (!has(IteratorPrototype, TO_STRING_TAG)) {\n  createNonEnumerableProperty(IteratorPrototype, TO_STRING_TAG, 'Iterator');\n}\n\nif (FORCED || !has(IteratorPrototype, 'constructor') || IteratorPrototype.constructor === Object) {\n  createNonEnumerableProperty(IteratorPrototype, 'constructor', IteratorConstructor);\n}\n\nIteratorConstructor.prototype = IteratorPrototype;\n$({\n  global: true,\n  forced: FORCED\n}, {\n  Iterator: IteratorConstructor\n});","map":null,"metadata":{},"sourceType":"script"}