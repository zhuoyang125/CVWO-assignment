{"ast":null,"code":"'use strict'; // https://github.com/tc39/proposal-iterator-helpers\n\nvar $ = require('../internals/export');\n\nvar aFunction = require('../internals/a-function');\n\nvar anObject = require('../internals/an-object');\n\nvar createAsyncIteratorProxy = require('../internals/async-iterator-create-proxy');\n\nvar AsyncIteratorProxy = createAsyncIteratorProxy(function (arg, Promise) {\n  var state = this;\n  var mapper = state.mapper;\n  return Promise.resolve(anObject(state.next.call(state.iterator, arg))).then(function (step) {\n    if (anObject(step).done) {\n      state.done = true;\n      return {\n        done: true,\n        value: undefined\n      };\n    }\n\n    return Promise.resolve(mapper(step.value)).then(function (value) {\n      return {\n        done: false,\n        value: value\n      };\n    });\n  });\n});\n$({\n  target: 'AsyncIterator',\n  proto: true,\n  real: true\n}, {\n  map: function map(mapper) {\n    return new AsyncIteratorProxy({\n      iterator: anObject(this),\n      mapper: aFunction(mapper)\n    });\n  }\n});","map":null,"metadata":{},"sourceType":"script"}