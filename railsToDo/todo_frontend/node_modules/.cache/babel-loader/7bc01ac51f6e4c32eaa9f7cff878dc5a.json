{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\zhuoy\\\\Documents\\\\basic-web-dev\\\\CVWO-assignment\\\\railsToDo\\\\todo_frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\zhuoy\\\\Documents\\\\basic-web-dev\\\\CVWO-assignment\\\\railsToDo\\\\todo_frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"C:\\\\Users\\\\zhuoy\\\\Documents\\\\basic-web-dev\\\\CVWO-assignment\\\\railsToDo\\\\todo_frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\zhuoy\\\\Documents\\\\basic-web-dev\\\\CVWO-assignment\\\\railsToDo\\\\todo_frontend\\\\src\\\\components\\\\App.jsx\";\nimport React, { useEffect, useState } from \"react\";\n\nfunction App() {\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      toDos = _useState2[0],\n      setToDos = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      input = _useState4[0],\n      setInput = _useState4[1];\n\n  var _useState5 = useState(),\n      _useState6 = _slicedToArray(_useState5, 2),\n      newToDo = _useState6[0],\n      setNewToDo = _useState6[1];\n\n  var getToDos = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var response, current_data;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return fetch(\"http://localhost:3000/todos\");\n\n            case 2:\n              response = _context.sent;\n              _context.next = 5;\n              return response.json();\n\n            case 5:\n              current_data = _context.sent;\n              setToDos(current_data);\n\n            case 7:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function getToDos() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  function listToDo(toDoItem) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 17\n      }\n    }, toDoItem.task), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 17\n      }\n    }, toDoItem.due_date), toDoItem.completed ? /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 39\n      }\n    }, \"Completed\") : /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 58\n      }\n    }, \"Not Done\"));\n  }\n\n  function handleChange(event) {\n    setInput(event.target.value);\n  }\n\n  useEffect(function () {\n    //get toDos when the page loads\n    getToDos();\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }\n  }, \"Tasks to Do\"), toDos.length > 0 ? toDos.map(listToDo) : /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 55\n    }\n  }, \"No Tasks\"));\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/zhuoy/Documents/basic-web-dev/CVWO-assignment/railsToDo/todo_frontend/src/components/App.jsx"],"names":["React","useEffect","useState","App","toDos","setToDos","input","setInput","newToDo","setNewToDo","getToDos","fetch","response","json","current_data","listToDo","toDoItem","task","due_date","completed","handleChange","event","target","value","length","map"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;;AAEA,SAASC,GAAT,GAAc;AAAA,kBACgBD,QAAQ,CAAC,EAAD,CADxB;AAAA;AAAA,MACHE,KADG;AAAA,MACIC,QADJ;;AAAA,mBAEgBH,QAAQ,CAAC,EAAD,CAFxB;AAAA;AAAA,MAEHI,KAFG;AAAA,MAEIC,QAFJ;;AAAA,mBAGoBL,QAAQ,EAH5B;AAAA;AAAA,MAGHM,OAHG;AAAA,MAGMC,UAHN;;AAKV,MAAMC,QAAQ;AAAA,wEAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACUC,KAAK,CAAC,6BAAD,CADf;;AAAA;AACPC,cAAAA,QADO;AAAA;AAAA,qBAEcA,QAAQ,CAACC,IAAT,EAFd;;AAAA;AAEPC,cAAAA,YAFO;AAGbT,cAAAA,QAAQ,CAACS,YAAD,CAAR;;AAHa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAARJ,QAAQ;AAAA;AAAA;AAAA,KAAd;;AAMA,WAASK,QAAT,CAAkBC,QAAlB,EAA2B;AACvB,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKA,QAAQ,CAACC,IAAd,CADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAID,QAAQ,CAACE,QAAb,CAFJ,EAGKF,QAAQ,CAACG,SAAT,gBAAqB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAArB,gBAAwC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAH7C,CADJ;AAOH;;AAED,WAASC,YAAT,CAAsBC,KAAtB,EAA4B;AACxBd,IAAAA,QAAQ,CAACc,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAR;AACH;;AAEDtB,EAAAA,SAAS,CAAC,YAAM;AAAE;AACdS,IAAAA,QAAQ;AACX,GAFQ,EAEN,EAFM,CAAT;AAIA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADJ,EAEKN,KAAK,CAACoB,MAAN,GAAe,CAAf,GAAmBpB,KAAK,CAACqB,GAAN,CAAUV,QAAV,CAAnB,gBAAyC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAF9C,CADJ;AAMH;;AAED,eAAeZ,GAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\n\r\nfunction App(){\r\n    const [toDos, setToDos] = useState([]);\r\n    const [input, setInput] = useState(\"\");\r\n    const [newToDo, setNewToDo] = useState()\r\n\r\n    const getToDos = async () => {\r\n        const response = await fetch(\"http://localhost:3000/todos\");\r\n        const current_data = await response.json();\r\n        setToDos(current_data);\r\n    }\r\n\r\n    function listToDo(toDoItem){\r\n        return(\r\n            <div>\r\n                <h3>{toDoItem.task}</h3>\r\n                <p>{toDoItem.due_date}</p>\r\n                {toDoItem.completed ? <p>Completed</p> : <p>Not Done</p> }\r\n            </div>\r\n        )\r\n    }\r\n\r\n    function handleChange(event){\r\n        setInput(event.target.value);\r\n    }\r\n\r\n    useEffect(() => { //get toDos when the page loads\r\n        getToDos()\r\n    }, []);\r\n\r\n    return (\r\n        <div>\r\n            <h1>Tasks to Do</h1>\r\n            {toDos.length > 0 ? toDos.map(listToDo) : <h2>No Tasks</h2>}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}