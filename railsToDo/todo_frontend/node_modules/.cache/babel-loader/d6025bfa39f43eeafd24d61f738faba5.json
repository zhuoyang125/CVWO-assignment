{"ast":null,"code":"'use strict';\n\nvar InternalStateModule = require('../internals/internal-state');\n\nvar createIteratorConstructor = require('../internals/create-iterator-constructor');\n\nvar has = require('../internals/has');\n\nvar objectKeys = require('../internals/object-keys');\n\nvar toObject = require('../internals/to-object');\n\nvar OBJECT_ITERATOR = 'Object Iterator';\nvar setInternalState = InternalStateModule.set;\nvar getInternalState = InternalStateModule.getterFor(OBJECT_ITERATOR);\nmodule.exports = createIteratorConstructor(function ObjectIterator(source, mode) {\n  var object = toObject(source);\n  setInternalState(this, {\n    type: OBJECT_ITERATOR,\n    mode: mode,\n    object: object,\n    keys: objectKeys(object),\n    index: 0\n  });\n}, 'Object', function next() {\n  var state = getInternalState(this);\n  var keys = state.keys;\n\n  while (true) {\n    if (keys === null || state.index >= keys.length) {\n      state.object = state.keys = null;\n      return {\n        value: undefined,\n        done: true\n      };\n    }\n\n    var key = keys[state.index++];\n    var object = state.object;\n    if (!has(object, key)) continue;\n\n    switch (state.mode) {\n      case 'keys':\n        return {\n          value: key,\n          done: false\n        };\n\n      case 'values':\n        return {\n          value: object[key],\n          done: false\n        };\n    }\n    /* entries */\n\n\n    return {\n      value: [key, object[key]],\n      done: false\n    };\n  }\n});","map":null,"metadata":{},"sourceType":"script"}