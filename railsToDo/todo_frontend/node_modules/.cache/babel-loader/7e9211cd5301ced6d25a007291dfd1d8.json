{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\zhuoy\\\\Documents\\\\basic-web-dev\\\\CVWO-assignment\\\\railsToDo\\\\todo_frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport _regeneratorRuntime from \"C:\\\\Users\\\\zhuoy\\\\Documents\\\\basic-web-dev\\\\CVWO-assignment\\\\railsToDo\\\\todo_frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\zhuoy\\\\Documents\\\\basic-web-dev\\\\CVWO-assignment\\\\railsToDo\\\\todo_frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"C:\\\\Users\\\\zhuoy\\\\Documents\\\\basic-web-dev\\\\CVWO-assignment\\\\railsToDo\\\\todo_frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\zhuoy\\\\Documents\\\\basic-web-dev\\\\CVWO-assignment\\\\railsToDo\\\\todo_frontend\\\\src\\\\components\\\\App.jsx\";\nimport React, { useEffect, useState } from \"react\";\n\nfunction App() {\n  // States\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      toDos = _useState2[0],\n      setToDos = _useState2[1];\n\n  var _useState3 = useState({\n    task: \"\",\n    due_date: \"\",\n    completed: false\n  }),\n      _useState4 = _slicedToArray(_useState3, 2),\n      newToDo = _useState4[0],\n      setNewToDo = _useState4[1];\n\n  var _useState5 = useState({\n    task: \"\",\n    due_date: \"\",\n    completed: false\n  }),\n      _useState6 = _slicedToArray(_useState5, 2),\n      updateToDo = _useState6[0],\n      setUpdateToDo = _useState6[1];\n\n  var getToDos = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var response, current_data;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return fetch(\"http://localhost:3000/todos\");\n\n            case 2:\n              response = _context.sent;\n              _context.next = 5;\n              return response.json();\n\n            case 5:\n              current_data = _context.sent;\n              setToDos(current_data);\n\n            case 7:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function getToDos() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  function listToDo(toDoItem) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 21\n      }\n    }, toDoItem.task), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 21\n      }\n    }, toDoItem.due_date), toDoItem.completed ? /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 43\n      }\n    }, \"Completed\") : /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 62\n      }\n    }, \"Not Done\"), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: function onClick() {\n        return handleDelete(toDoItem);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 21\n      }\n    }, \"Delete\"), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: function onClick() {\n        return handleUpdateToDo(toDoItem);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 21\n      }\n    }, \"Edit\"));\n  }\n\n  function handleNewToDo(event) {\n    //when user submits new entry\n    var _event$target = event.target,\n        name = _event$target.name,\n        value = _event$target.value;\n    setNewToDo(function (prevValue) {\n      return _objectSpread(_objectSpread({}, prevValue), {}, {\n        [name]: value\n      });\n    });\n  }\n\n  var handleCreate = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(event) {\n      var response;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              //post new toDo object\n              event.preventDefault();\n              _context2.next = 3;\n              return fetch(\"http://localhost:3000/todos\", {\n                method: \"post\",\n                headers: {\n                  \"Content-Type\": \"application/json\"\n                },\n                body: JSON.stringify(newToDo)\n              });\n\n            case 3:\n              response = _context2.sent;\n              _context2.next = 6;\n              return getToDos();\n\n            case 6:\n              setNewToDo({\n                task: \"\",\n                due_date: \"\",\n                completed: false\n              }); //reset to blank\n\n            case 7:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function handleCreate(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var handleDelete = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(toDo) {\n      var response;\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.next = 2;\n              return fetch(\"http://localhost:3000/todos/\" + toDo.id, {\n                method: \"delete\"\n              });\n\n            case 2:\n              response = _context3.sent;\n              _context3.next = 5;\n              return getToDos();\n\n            case 5:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }));\n\n    return function handleDelete(_x2) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n\n  function handleUpdateToDo(event) {\n    var _event$target2 = event.target,\n        name = _event$target2.name,\n        value = _event$target2.value;\n    setUpdateToDo(function (prevValue) {\n      return _objectSpread(_objectSpread({}, prevValue), {}, {\n        [name]: value\n      });\n    });\n  }\n\n  var handleUpdate = /*#__PURE__*/function () {\n    var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(event) {\n      var response;\n      return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              event.preventDefault();\n              _context4.next = 3;\n              return fetch(\"http://localhost:3000/todos/\" + updateToDo.id, {\n                method: \"put\",\n                headers: {\n                  \"Content-Type\": \"application/json\"\n                },\n                body: JSON.stringify(updateToDo)\n              });\n\n            case 3:\n              response = _context4.sent;\n\n            case 4:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4);\n    }));\n\n    return function handleUpdate(_x3) {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n\n  useEffect(function () {\n    //get toDos when the page loads\n    getToDos();\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 17\n    }\n  }, \"Tasks to Do\"), toDos.length > 0 ? toDos.map(listToDo) : /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 59\n    }\n  }, \"No Tasks\"), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 22\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 27\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 32\n    }\n  }), /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 17\n    }\n  }, \"Add Task\"), /*#__PURE__*/React.createElement(\"form\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"task\",\n    placeholder: \"New Task\",\n    onChange: handleNewToDo,\n    value: newToDo.task,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 123\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 128\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"date\",\n    name: \"due_date\",\n    placeholder: \"Due Date\",\n    onChange: handleNewToDo,\n    value: newToDo.due_date,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 131\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 136\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: handleCreate,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 21\n    }\n  }, \"Add\")), /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 17\n    }\n  }, \"Edit Task\"), /*#__PURE__*/React.createElement(\"form\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"task\",\n    placeholder: updateToDo.task,\n    onChange: handleUpdateToDo,\n    value: newToDo.task,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 133\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 138\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"date\",\n    name: \"due_date\",\n    placeholder: updateToDo.due_date,\n    onChange: handleUpdateToDo,\n    value: newToDo.due_date,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 145\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 150\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: handleUpdate,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 21\n    }\n  }, \"Add\")));\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/zhuoy/Documents/basic-web-dev/CVWO-assignment/railsToDo/todo_frontend/src/components/App.jsx"],"names":["React","useEffect","useState","App","toDos","setToDos","task","due_date","completed","newToDo","setNewToDo","updateToDo","setUpdateToDo","getToDos","fetch","response","json","current_data","listToDo","toDoItem","handleDelete","handleUpdateToDo","handleNewToDo","event","target","name","value","prevValue","handleCreate","preventDefault","method","headers","body","JSON","stringify","toDo","id","handleUpdate","length","map"],"mappings":"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","sourcesContent":["import React, { useEffect, useState }  from \"react\";\r\n\r\nfunction App(){\r\n        // States\r\n        const [toDos, setToDos] = useState([]);\r\n        const [newToDo, setNewToDo] = useState({task: \"\", due_date: \"\", completed: false}); \r\n        const [updateToDo, setUpdateToDo] = useState({task: \"\", due_date: \"\", completed: false});\r\n    \r\n        const getToDos = async () => {\r\n            const response = await fetch(\"http://localhost:3000/todos\");\r\n            const current_data = await response.json();\r\n            setToDos(current_data);\r\n        }\r\n    \r\n        function listToDo(toDoItem){\r\n            return(\r\n                <div>\r\n                    <h3>{toDoItem.task}</h3>\r\n                    <p>{toDoItem.due_date}</p>\r\n                    {toDoItem.completed ? <p>Completed</p> : <p>Not Done</p> }\r\n                \r\n                    <button onClick={() => handleDelete(toDoItem)}>Delete</button>\r\n                    <button onClick={() => handleUpdateToDo(toDoItem)}>Edit</button>\r\n                </div>\r\n            )\r\n        }\r\n    \r\n        function handleNewToDo(event){ //when user submits new entry\r\n            const { name, value } = event.target;\r\n    \r\n            setNewToDo(prevValue => {\r\n                return {\r\n                    ...prevValue,\r\n                    [name]: value\r\n                }\r\n            });\r\n        }\r\n    \r\n        const handleCreate = async event => { //post new toDo object\r\n            event.preventDefault();\r\n            \r\n            const response = await fetch(\"http://localhost:3000/todos\", {\r\n                method: \"post\",\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                },\r\n                body: JSON.stringify(newToDo),\r\n            });\r\n    \r\n            await getToDos();\r\n    \r\n            setNewToDo({task: \"\", due_date: \"\", completed: false}); //reset to blank\r\n        } \r\n    \r\n        const handleDelete = async toDo => {\r\n            // toDo.preventDefault();\r\n    \r\n            const response = await fetch(\"http://localhost:3000/todos/\" + toDo.id, {\r\n                method: \"delete\",\r\n            } );\r\n    \r\n            await getToDos();\r\n        }\r\n        \r\n        function handleUpdateToDo(event){\r\n            const { name, value } = event.target;\r\n            setUpdateToDo(prevValue => {\r\n                return {\r\n                    ...prevValue,\r\n                    [name]: value\r\n                }\r\n            })\r\n        }\r\n\r\n        const handleUpdate = async event => {\r\n            event.preventDefault();\r\n\r\n            const response = await fetch(\"http://localhost:3000/todos/\" + updateToDo.id, {\r\n                method: \"put\",\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                },\r\n                body: JSON.stringify(updateToDo),\r\n            });\r\n        }\r\n    \r\n        useEffect(() => { //get toDos when the page loads\r\n            getToDos()\r\n        }, []);\r\n    \r\n        return (\r\n            <div>\r\n                <h1>Tasks to Do</h1>\r\n                {toDos.length > 0 ? toDos.map(listToDo) : <h2>No Tasks</h2>}\r\n                <br/><br/><br/><br/>\r\n    \r\n                <h2>Add Task</h2>\r\n    \r\n                <form>\r\n                    <input type=\"text\" name=\"task\" placeholder=\"New Task\" onChange={handleNewToDo} value={newToDo.task} /><br/><br/>\r\n                    <input type=\"date\" name=\"due_date\" placeholder=\"Due Date\" onChange={handleNewToDo} value={newToDo.due_date} /><br/><br/>\r\n                    <button onClick={handleCreate}>Add</button>\r\n                </form>\r\n\r\n                <h2>Edit Task</h2>\r\n\r\n                <form>\r\n                    <input type=\"text\" name=\"task\" placeholder={updateToDo.task} onChange={handleUpdateToDo} value={newToDo.task} /><br/><br/>\r\n                    <input type=\"date\" name=\"due_date\" placeholder={updateToDo.due_date} onChange={handleUpdateToDo} value={newToDo.due_date} /><br/><br/>\r\n                    <button onClick={handleUpdate}>Add</button>\r\n                </form>\r\n            </div>\r\n        );\r\n}\r\n\r\nexport default App;"]},"metadata":{},"sourceType":"module"}