{"ast":null,"code":"'use strict';\n\nvar path = require('../internals/path');\n\nvar aFunction = require('../internals/a-function');\n\nvar anObject = require('../internals/an-object');\n\nvar create = require('../internals/object-create');\n\nvar createNonEnumerableProperty = require('../internals/create-non-enumerable-property');\n\nvar redefineAll = require('../internals/redefine-all');\n\nvar wellKnownSymbol = require('../internals/well-known-symbol');\n\nvar InternalStateModule = require('../internals/internal-state');\n\nvar getBuiltIn = require('../internals/get-built-in');\n\nvar Promise = getBuiltIn('Promise');\nvar setInternalState = InternalStateModule.set;\nvar getInternalState = InternalStateModule.get;\nvar TO_STRING_TAG = wellKnownSymbol('toStringTag');\n\nvar $return = function $return(value) {\n  var iterator = getInternalState(this).iterator;\n  var $$return = iterator['return'];\n  return $$return === undefined ? Promise.resolve({\n    done: true,\n    value: value\n  }) : anObject($$return.call(iterator, value));\n};\n\nvar $throw = function $throw(value) {\n  var iterator = getInternalState(this).iterator;\n  var $$throw = iterator['throw'];\n  return $$throw === undefined ? Promise.reject(value) : $$throw.call(iterator, value);\n};\n\nmodule.exports = function (nextHandler, IS_ITERATOR) {\n  var AsyncIteratorProxy = function AsyncIterator(state) {\n    state.next = aFunction(state.iterator.next);\n    state.done = false;\n    setInternalState(this, state);\n  };\n\n  AsyncIteratorProxy.prototype = redefineAll(create(path.AsyncIterator.prototype), {\n    next: function next(arg) {\n      var state = getInternalState(this);\n      if (state.done) return Promise.resolve({\n        done: true,\n        value: undefined\n      });\n\n      try {\n        return Promise.resolve(anObject(nextHandler.call(state, arg, Promise)));\n      } catch (error) {\n        return Promise.reject(error);\n      }\n    },\n    'return': $return,\n    'throw': $throw\n  });\n\n  if (!IS_ITERATOR) {\n    createNonEnumerableProperty(AsyncIteratorProxy.prototype, TO_STRING_TAG, 'Generator');\n  }\n\n  return AsyncIteratorProxy;\n};","map":null,"metadata":{},"sourceType":"script"}