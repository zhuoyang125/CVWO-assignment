{"ast":null,"code":"'use strict';\n\nvar $ = require('../internals/export');\n\nvar toLength = require('../internals/to-length');\n\nvar toObject = require('../internals/to-object');\n\nvar getBuiltIn = require('../internals/get-built-in');\n\nvar arraySpeciesCreate = require('../internals/array-species-create');\n\nvar addToUnscopables = require('../internals/add-to-unscopables');\n\nvar push = [].push; // `Array.prototype.uniqueBy` method\n// https://github.com/tc39/proposal-array-unique\n\n$({\n  target: 'Array',\n  proto: true\n}, {\n  uniqueBy: function uniqueBy(resolver) {\n    var that = toObject(this);\n    var length = toLength(that.length);\n    var result = arraySpeciesCreate(that, 0);\n    var Map = getBuiltIn('Map');\n    var map = new Map();\n    var resolverFunction, index, item, key;\n    if (typeof resolver == 'function') resolverFunction = resolver;else if (resolver == null) resolverFunction = function resolverFunction(value) {\n      return value;\n    };else throw new TypeError('Incorrect resolver!');\n\n    for (index = 0; index < length; index++) {\n      item = that[index];\n      key = resolverFunction(item);\n      if (!map.has(key)) map.set(key, item);\n    }\n\n    map.forEach(function (value) {\n      push.call(result, value);\n    });\n    return result;\n  }\n});\naddToUnscopables('uniqueBy');","map":null,"metadata":{},"sourceType":"script"}