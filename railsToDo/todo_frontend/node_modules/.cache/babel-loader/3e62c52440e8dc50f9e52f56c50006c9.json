{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\zhuoy\\\\Documents\\\\basic-web-dev\\\\CVWO-assignment\\\\railsToDo\\\\todo_frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport _regeneratorRuntime from \"C:\\\\Users\\\\zhuoy\\\\Documents\\\\basic-web-dev\\\\CVWO-assignment\\\\railsToDo\\\\todo_frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\zhuoy\\\\Documents\\\\basic-web-dev\\\\CVWO-assignment\\\\railsToDo\\\\todo_frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"C:\\\\Users\\\\zhuoy\\\\Documents\\\\basic-web-dev\\\\CVWO-assignment\\\\railsToDo\\\\todo_frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\zhuoy\\\\Documents\\\\basic-web-dev\\\\CVWO-assignment\\\\railsToDo\\\\todo_frontend\\\\src\\\\components\\\\Search.jsx\";\nimport React, { useState } from 'react';\n\nfunction Search(props) {\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      listOfTasks = _useState2[0],\n      setListOfTasks = _useState2[1];\n\n  var getTasks = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var response, data;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return fetch(\"http://localhost:3000/todos\");\n\n            case 2:\n              response = _context.sent;\n              _context.next = 5;\n              return response.json();\n\n            case 5:\n              data = _context.sent;\n              setListOfTasks(data);\n\n            case 7:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function getTasks() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  function listTask(taskItem) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      style: taskItem.completed ? {\n        textDecoration: \"line-through\"\n      } : {\n        textDecoration: \"none\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 17\n      }\n    }, taskItem.todo_title), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"checkbox\",\n      onClick: function onClick() {\n        return createComplete(taskItem);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 17\n      }\n    }, \"Complete\"), /*#__PURE__*/React.createElement(\"h5\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 17\n      }\n    }, taskItem.due_date), /*#__PURE__*/React.createElement(\"h5\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 17\n      }\n    }, taskItem.todo_tag), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 17\n      }\n    }, taskItem.completed));\n  }\n\n  var createComplete = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(taskItem) {\n      var initial, completed_task, response;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              console.log(new Date(taskItem.due_date));\n              initial = taskItem.completed;\n              completed_task = _objectSpread(_objectSpread({}, taskItem), {}, {\n                completed: !initial\n              });\n              _context2.next = 5;\n              return fetch(\"http://localhost:3000/todos/\" + taskItem.id, {\n                method: \"put\",\n                headers: {\n                  \"Content-Type\": \"application/json\"\n                },\n                body: JSON.stringify(completed_task)\n              });\n\n            case 5:\n              response = _context2.sent;\n              _context2.next = 8;\n              return getTasks();\n\n            case 8:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function createComplete(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  }, props.searchResults.map(listTask));\n}\n\nexport default Search;","map":{"version":3,"sources":["C:/Users/zhuoy/Documents/basic-web-dev/CVWO-assignment/railsToDo/todo_frontend/src/components/Search.jsx"],"names":["React","useState","Search","props","listOfTasks","setListOfTasks","getTasks","fetch","response","json","data","listTask","taskItem","completed","textDecoration","todo_title","createComplete","due_date","todo_tag","console","log","Date","initial","completed_task","id","method","headers","body","JSON","stringify","searchResults","map"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;AAEA,SAASC,MAAT,CAAgBC,KAAhB,EAAsB;AAAA,kBAEoBF,QAAQ,CAAC,EAAD,CAF5B;AAAA;AAAA,MAEXG,WAFW;AAAA,MAEEC,cAFF;;AAIlB,MAAMC,QAAQ;AAAA,wEAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACUC,KAAK,CAAC,6BAAD,CADf;;AAAA;AACPC,cAAAA,QADO;AAAA;AAAA,qBAEMA,QAAQ,CAACC,IAAT,EAFN;;AAAA;AAEPC,cAAAA,IAFO;AAGbL,cAAAA,cAAc,CAACK,IAAD,CAAd;;AAHa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAARJ,QAAQ;AAAA;AAAA;AAAA,KAAd;;AAMA,WAASK,QAAT,CAAkBC,QAAlB,EAA2B;AACvB,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAI,MAAA,KAAK,EAAGA,QAAQ,CAACC,SAAT,GAAqB;AAACC,QAAAA,cAAc,EAAE;AAAjB,OAArB,GAAwD;AAACA,QAAAA,cAAc,EAAE;AAAjB,OAApE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA+FF,QAAQ,CAACG,UAAxG,CADJ,eAEI;AAAO,MAAA,IAAI,EAAC,UAAZ;AAAuB,MAAA,OAAO,EAAE;AAAA,eAAMC,cAAc,CAACJ,QAAD,CAApB;AAAA,OAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKA,QAAQ,CAACK,QAAd,CAJJ,eAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKL,QAAQ,CAACM,QAAd,CALJ,eAMI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAIN,QAAQ,CAACC,SAAb,CANJ,CADJ;AAYH;;AAED,MAAMG,cAAc;AAAA,yEAAG,kBAAMJ,QAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AACnBO,cAAAA,OAAO,CAACC,GAAR,CAAY,IAAIC,IAAJ,CAAST,QAAQ,CAACK,QAAlB,CAAZ;AACMK,cAAAA,OAFa,GAEHV,QAAQ,CAACC,SAFN;AAGbU,cAAAA,cAHa,mCAIZX,QAJY;AAKfC,gBAAAA,SAAS,EAAE,CAACS;AALG;AAAA;AAAA,qBAOIf,KAAK,CAAC,iCAAiCK,QAAQ,CAACY,EAA3C,EAA+C;AACvEC,gBAAAA,MAAM,EAAE,KAD+D;AAEvEC,gBAAAA,OAAO,EAAE;AACL,kCAAgB;AADX,iBAF8D;AAKvEC,gBAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeN,cAAf;AALiE,eAA/C,CAPT;;AAAA;AAObf,cAAAA,QAPa;AAAA;AAAA,qBAebF,QAAQ,EAfK;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAAdU,cAAc;AAAA;AAAA;AAAA,KAApB;;AAkBA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKb,KAAK,CAAC2B,aAAN,CAAoBC,GAApB,CAAwBpB,QAAxB,CADL,CADJ;AAKH;;AAED,eAAeT,MAAf","sourcesContent":["import React, { useState } from 'react';\r\n\r\nfunction Search(props){\r\n\r\n    const [listOfTasks, setListOfTasks] = useState([]);\r\n\r\n    const getTasks = async () => {\r\n        const response = await fetch(\"http://localhost:3000/todos\");\r\n        const data = await response.json();\r\n        setListOfTasks(data);\r\n    }\r\n\r\n    function listTask(taskItem){\r\n        return (\r\n            <div>\r\n                <h3 style={ taskItem.completed ? {textDecoration: \"line-through\"} : {textDecoration: \"none\"}}>{taskItem.todo_title}</h3>\r\n                <input type=\"checkbox\" onClick={() => createComplete(taskItem)} />\r\n                <p>Complete</p>\r\n                <h5>{taskItem.due_date}</h5>\r\n                <h5>{taskItem.todo_tag}</h5>\r\n                <p>{taskItem.completed}</p>\r\n                {/* <button onClick={() => deleteTask(taskItem)}>Delete</button>\r\n                <button onClick={() => selectUpdate(taskItem)}>Update</button> */}\r\n            </div>\r\n        )\r\n    }\r\n\r\n    const createComplete = async taskItem => {\r\n        console.log(new Date(taskItem.due_date));\r\n        const initial = taskItem.completed;\r\n        const completed_task = {\r\n            ...taskItem,\r\n            completed: !initial\r\n        }\r\n        const response = await fetch(\"http://localhost:3000/todos/\" + taskItem.id, {\r\n            method: \"put\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n            },\r\n            body: JSON.stringify(completed_task),\r\n        });\r\n\r\n        await getTasks();\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {props.searchResults.map(listTask)}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Search;"]},"metadata":{},"sourceType":"module"}