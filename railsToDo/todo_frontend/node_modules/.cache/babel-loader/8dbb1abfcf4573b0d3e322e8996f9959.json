{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\zhuoy\\\\Documents\\\\basic-web-dev\\\\CVWO-assignment\\\\railsToDo\\\\todo_frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\zhuoy\\\\Documents\\\\basic-web-dev\\\\CVWO-assignment\\\\railsToDo\\\\todo_frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"C:\\\\Users\\\\zhuoy\\\\Documents\\\\basic-web-dev\\\\CVWO-assignment\\\\railsToDo\\\\todo_frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\zhuoy\\\\Documents\\\\basic-web-dev\\\\CVWO-assignment\\\\railsToDo\\\\todo_frontend\\\\src\\\\components\\\\List.jsx\";\nimport React, { useEffect, useState } from 'react';\nimport Update from \"./Update\";\n\nfunction List() {\n  // Data for updating\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      updateMode = _useState2[0],\n      setUpdateMode = _useState2[1];\n\n  var _useState3 = useState({\n    todo_title: \"\",\n    due_date: \"\",\n    todo_tag: \"\",\n    completed: false\n  }),\n      _useState4 = _slicedToArray(_useState3, 2),\n      taskToUpdate = _useState4[0],\n      setTaskToUpdate = _useState4[1];\n\n  var _useState5 = useState([]),\n      _useState6 = _slicedToArray(_useState5, 2),\n      listOfTasks = _useState6[0],\n      setListOfTasks = _useState6[1];\n\n  var _useState7 = useState([]),\n      _useState8 = _slicedToArray(_useState7, 2),\n      listOfFilteredTasks = _useState8[0],\n      setListOfFilteredTasks = _useState8[1];\n\n  var _useState9 = useState(\"\"),\n      _useState10 = _slicedToArray(_useState9, 2),\n      filterOption = _useState10[0],\n      setFilterOption = _useState10[1];\n\n  function filterTasks(event) {\n    setFilterOption(event.target.value);\n    var filtered = listOfTasks.filter(function (item) {\n      return item === filterOption;\n    });\n  }\n\n  var getTasks = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var response, data;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return fetch(\"http://localhost:3000/todos\");\n\n            case 2:\n              response = _context.sent;\n              _context.next = 5;\n              return response.json();\n\n            case 5:\n              data = _context.sent;\n              setListOfTasks(data);\n\n            case 7:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function getTasks() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  function selectUpdate(taskItem) {\n    console.log(taskItem);\n    setTaskToUpdate(taskItem);\n    setUpdateMode(true);\n  }\n\n  function listTask(taskItem) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }\n    }, taskItem.todo_title), /*#__PURE__*/React.createElement(\"h5\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }\n    }, taskItem.due_date), /*#__PURE__*/React.createElement(\"h5\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }\n    }, taskItem.todo_tag), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }\n    }, taskItem.completed), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: function onClick() {\n        return deleteTask(taskItem);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }\n    }, \"Delete\"), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: function onClick() {\n        return selectUpdate(taskItem);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }\n    }, \"Update\"));\n  }\n\n  var deleteTask = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(taskItem) {\n      var response;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return fetch(\"http://localhost:3000/todos/\" + taskItem.id, {\n                method: \"delete\"\n              });\n\n            case 2:\n              response = _context2.sent;\n              _context2.next = 5;\n              return getTasks();\n\n            case 5:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function deleteTask(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  useEffect(function () {\n    getTasks();\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }\n  }, \"List of Tasks\"), /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }\n  }, \"Sort By:\"), /*#__PURE__*/React.createElement(\"select\", {\n    onChange: filterTasks,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 17\n    }\n  }, \"All\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"school\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 17\n    }\n  }, \"School\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"work\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 17\n    }\n  }, \"Work\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"personal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 17\n    }\n  }, \"Personal\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"urgent\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 17\n    }\n  }, \"Urgent\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"important\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 17\n    }\n  }, \"Important\")), listOfTasks.map(listTask), /*#__PURE__*/React.createElement(Update, {\n    taskItem: taskToUpdate,\n    getTasks: getTasks,\n    update_mode: updateMode,\n    setUpdateMode: setUpdateMode,\n    setTaskToUpdate: setTaskToUpdate,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }\n  }));\n}\n\nexport default List;","map":{"version":3,"sources":["C:/Users/zhuoy/Documents/basic-web-dev/CVWO-assignment/railsToDo/todo_frontend/src/components/List.jsx"],"names":["React","useEffect","useState","Update","List","updateMode","setUpdateMode","todo_title","due_date","todo_tag","completed","taskToUpdate","setTaskToUpdate","listOfTasks","setListOfTasks","listOfFilteredTasks","setListOfFilteredTasks","filterOption","setFilterOption","filterTasks","event","target","value","filtered","filter","item","getTasks","fetch","response","json","data","selectUpdate","taskItem","console","log","listTask","deleteTask","id","method","map"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport Update from \"./Update\";\r\n\r\nfunction List(){\r\n    // Data for updating\r\n    const [updateMode, setUpdateMode] = useState(false);    \r\n\r\n    const [taskToUpdate, setTaskToUpdate] = useState({\r\n        todo_title:\"\",\r\n        due_date:\"\",\r\n        todo_tag:\"\",\r\n        completed:false\r\n    });\r\n\r\n    const [listOfTasks, setListOfTasks] = useState([]);\r\n\r\n    const [listOfFilteredTasks, setListOfFilteredTasks] = useState([]);\r\n\r\n    const [filterOption, setFilterOption] = useState(\"\");\r\n\r\n    function filterTasks(event){\r\n        setFilterOption(event.target.value);\r\n        const filtered = listOfTasks.filter(item => {\r\n            return item === filterOption;\r\n        })\r\n    }\r\n\r\n    const getTasks = async () => {\r\n        const response = await fetch(\"http://localhost:3000/todos\");\r\n        const data = await response.json();\r\n        setListOfTasks(data);\r\n    }\r\n\r\n    function selectUpdate(taskItem) {\r\n        console.log(taskItem);\r\n        setTaskToUpdate(taskItem);\r\n        setUpdateMode(true);\r\n    }\r\n\r\n    function listTask(taskItem){\r\n        return (\r\n            <div>\r\n                <h3>{taskItem.todo_title}</h3>\r\n                <h5>{taskItem.due_date}</h5>\r\n                <h5>{taskItem.todo_tag}</h5>\r\n                <p>{taskItem.completed}</p>\r\n                <button onClick={() => deleteTask(taskItem)}>Delete</button>\r\n                <button onClick={() => selectUpdate(taskItem)}>Update</button>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    const deleteTask = async taskItem => {\r\n        const response = await fetch(\"http://localhost:3000/todos/\" + taskItem.id, {\r\n            method: \"delete\",\r\n        })\r\n\r\n        await getTasks();\r\n\r\n    }\r\n\r\n    useEffect(() => {getTasks()}, []);\r\n\r\n    return(\r\n        <div>\r\n            <h1>List of Tasks</h1>\r\n            <h3>Sort By:</h3>\r\n            <select onChange={filterTasks}>\r\n                <option value=\"\">All</option>\r\n                <option value=\"school\">School</option>\r\n                <option value=\"work\">Work</option>\r\n                <option value=\"personal\">Personal</option>\r\n                <option value=\"urgent\">Urgent</option>\r\n                <option value=\"important\">Important</option>\r\n            </select>\r\n\r\n            {listOfTasks.map(listTask)}\r\n            <Update taskItem={taskToUpdate}\r\n                    getTasks={getTasks} \r\n                    update_mode={updateMode}\r\n                    setUpdateMode={setUpdateMode}\r\n                    setTaskToUpdate={setTaskToUpdate}  />\r\n        </div>\r\n        \r\n    )\r\n}\r\n\r\nexport default List;"]},"metadata":{},"sourceType":"module"}