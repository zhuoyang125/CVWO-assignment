{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\zhuoy\\\\Documents\\\\basic-web-dev\\\\CVWO-assignment\\\\railsToDo\\\\todo_frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\zhuoy\\\\Documents\\\\basic-web-dev\\\\CVWO-assignment\\\\railsToDo\\\\todo_frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _objectSpread from \"C:\\\\Users\\\\zhuoy\\\\Documents\\\\basic-web-dev\\\\CVWO-assignment\\\\railsToDo\\\\todo_frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"C:\\\\Users\\\\zhuoy\\\\Documents\\\\basic-web-dev\\\\CVWO-assignment\\\\railsToDo\\\\todo_frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\zhuoy\\\\Documents\\\\basic-web-dev\\\\CVWO-assignment\\\\railsToDo\\\\todo_frontend\\\\src\\\\components\\\\Update.jsx\";\nimport React, { useState } from \"react\";\n\nfunction Update(props) {\n  var _useState = useState({\n    task: \"\",\n    due_date: \"\",\n    completed: false\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      updateToDo = _useState2[0],\n      setUpdateToDo = _useState2[1];\n\n  function handleUpdateToDo(event) {\n    var _event$target = event.target,\n        name = _event$target.name,\n        value = _event$target.value;\n    setUpdateToDo(function (prevValue) {\n      return _objectSpread(_objectSpread({}, prevValue), {}, {\n        [name]: value\n      });\n    });\n  }\n\n  var handleUpdate = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(event) {\n      var response;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              //put new toDo object\n              event.preventDefault();\n              _context.next = 3;\n              return fetch(\"http://localhost:3000/todos/\" + updateToDo.id, {\n                method: \"put\",\n                headers: {\n                  \"Content-Type\": \"application/json\"\n                },\n                body: JSON.stringify(updateToDo)\n              });\n\n            case 3:\n              response = _context.sent;\n              _context.next = 6;\n              return getToDos();\n\n            case 6:\n              setUpdateToDo({\n                task: \"\",\n                due_date: \"\",\n                completed: false\n              }); //reset to blank\n\n            case 7:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function handleUpdate(_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }\n  }, \"Update Todo\"), /*#__PURE__*/React.createElement(\"form\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    onChange: handleUpdateToDo,\n    type: \"text\",\n    name: \"task\",\n    placeholder: props.toDo.task,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    onChange: handleUpdateToDo,\n    type: \"date\",\n    name: \"due_date\",\n    placeholder: props.toDo.due_date,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: handleUpdate,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 17\n    }\n  }, \"Update\")));\n}\n\nexport default Update;","map":{"version":3,"sources":["C:/Users/zhuoy/Documents/basic-web-dev/CVWO-assignment/railsToDo/todo_frontend/src/components/Update.jsx"],"names":["React","useState","Update","props","task","due_date","completed","updateToDo","setUpdateToDo","handleUpdateToDo","event","target","name","value","prevValue","handleUpdate","preventDefault","fetch","id","method","headers","body","JSON","stringify","response","getToDos","toDo"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;AAEA,SAASC,MAAT,CAAgBC,KAAhB,EAAsB;AAAA,kBAEkBF,QAAQ,CAAC;AAACG,IAAAA,IAAI,EAAE,EAAP;AAAWC,IAAAA,QAAQ,EAAE,EAArB;AAAyBC,IAAAA,SAAS,EAAE;AAApC,GAAD,CAF1B;AAAA;AAAA,MAEXC,UAFW;AAAA,MAECC,aAFD;;AAKlB,WAASC,gBAAT,CAA0BC,KAA1B,EAAgC;AAAA,wBACJA,KAAK,CAACC,MADF;AAAA,QACpBC,IADoB,iBACpBA,IADoB;AAAA,QACdC,KADc,iBACdA,KADc;AAG5BL,IAAAA,aAAa,CAAC,UAAAM,SAAS,EAAI;AACvB,6CACOA,SADP;AAEI,SAACF,IAAD,GAAQC;AAFZ;AAIH,KALY,CAAb;AAMH;;AAED,MAAME,YAAY;AAAA,wEAAG,iBAAML,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAiB;AAClCA,cAAAA,KAAK,CAACM,cAAN;AADiB;AAAA,qBAGMC,KAAK,CAAC,iCAAiCV,UAAU,CAACW,EAA7C,EAAiD;AACzEC,gBAAAA,MAAM,EAAE,KADiE;AAEzEC,gBAAAA,OAAO,EAAE;AACL,kCAAgB;AADX,iBAFgE;AAKzEC,gBAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAehB,UAAf;AALmE,eAAjD,CAHX;;AAAA;AAGXiB,cAAAA,QAHW;AAAA;AAAA,qBAWXC,QAAQ,EAXG;;AAAA;AAajBjB,cAAAA,aAAa,CAAC;AAACJ,gBAAAA,IAAI,EAAE,EAAP;AAAWC,gBAAAA,QAAQ,EAAE,EAArB;AAAyBC,gBAAAA,SAAS,EAAE;AAApC,eAAD,CAAb,CAbiB,CAa0C;;AAb1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAAZS,YAAY;AAAA;AAAA;AAAA,KAAlB;;AAgBA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAO,IAAA,QAAQ,EAAEN,gBAAjB;AAAmC,IAAA,IAAI,EAAC,MAAxC;AAA+C,IAAA,IAAI,EAAC,MAApD;AAA2D,IAAA,WAAW,EAAEN,KAAK,CAACuB,IAAN,CAAWtB,IAAnF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAEI;AAAO,IAAA,QAAQ,EAAEK,gBAAjB;AAAmC,IAAA,IAAI,EAAC,MAAxC;AAA+C,IAAA,IAAI,EAAC,UAApD;AAA+D,IAAA,WAAW,EAAEN,KAAK,CAACuB,IAAN,CAAWrB,QAAvF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,eAGI;AAAQ,IAAA,OAAO,EAAEU,YAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHJ,CAFJ,CADJ;AAUH;;AAED,eAAeb,MAAf","sourcesContent":["import React, { useState } from \"react\";\r\n\r\nfunction Update(props){\r\n\r\n    const [updateToDo, setUpdateToDo] = useState({task: \"\", due_date: \"\", completed: false});\r\n\r\n\r\n    function handleUpdateToDo(event){\r\n        const { name, value } = event.target;\r\n        \r\n        setUpdateToDo(prevValue => {\r\n            return {\r\n                ...prevValue,\r\n                [name]: value\r\n            }\r\n        })\r\n    }\r\n\r\n    const handleUpdate = async event => { //put new toDo object\r\n        event.preventDefault();\r\n        \r\n        const response = await fetch(\"http://localhost:3000/todos/\" + updateToDo.id, {\r\n            method: \"put\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n            },\r\n            body: JSON.stringify(updateToDo),\r\n        });\r\n\r\n        await getToDos();\r\n\r\n        setUpdateToDo({task: \"\", due_date: \"\", completed: false}); //reset to blank\r\n    } \r\n\r\n    return (\r\n        <div>\r\n            <h1>Update Todo</h1>\r\n            <form>\r\n                <input onChange={handleUpdateToDo} type=\"text\" name=\"task\" placeholder={props.toDo.task} />\r\n                <input onChange={handleUpdateToDo} type=\"date\" name=\"due_date\" placeholder={props.toDo.due_date} />\r\n                <button onClick={handleUpdate}>Update</button>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Update;"]},"metadata":{},"sourceType":"module"}